// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package br

import (
	"sync"
)

// Ensure, that URL does implement URLInterface.
// If this is not the case, regenerate this file with moq.
var _ URLInterface = &URL{}

// URL is a mock implementation of URLInterface.
//
//	func TestSomethingThatUsesURLInterface(t *testing.T) {
//
//		// make and configure a mocked URLInterface
//		mockedURLInterface := &URL{
//			buildFunc: func() string {
//				panic("mock out the build method")
//			},
//		}
//
//		// use mockedURLInterface in code that requires URLInterface
//		// and then make assertions.
//
//	}
type URL struct {
	// buildFunc mocks the build method.
	buildFunc func() string

	// calls tracks calls to the methods.
	calls struct {
		// build holds details about calls to the build method.
		build []struct {
		}
	}
	lockbuild sync.RWMutex
}

// build calls buildFunc.
func (mock *URL) build() string {
	if mock.buildFunc == nil {
		panic("URL.buildFunc: method is nil but URLInterface.build was just called")
	}
	callInfo := struct {
	}{}
	mock.lockbuild.Lock()
	mock.calls.build = append(mock.calls.build, callInfo)
	mock.lockbuild.Unlock()
	return mock.buildFunc()
}

// buildCalls gets all the calls that were made to build.
// Check the length with:
//
//	len(mockedURLInterface.buildCalls())
func (mock *URL) buildCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockbuild.RLock()
	calls = mock.calls.build
	mock.lockbuild.RUnlock()
	return calls
}
